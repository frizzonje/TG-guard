from telethon import TelegramClient
from telethon.utils import get_display_name

from .config_manager import get_config
from .ui_manager import show_list_management_menu, show_mode_selection
from .utils import resolve_users
from .message_handler import setup_saved_messages_auto_delete
from .modes import (
    mode_tracked_scanning, mode_blacklist_purge_all, 
    mode_blacklist_new_only, mode_combined, mode_self_purge, get_users_from_group
)


async def run_telegram_client():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram –∫–ª–∏–µ–Ω—Ç–∞."""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é Telegram-–∫–ª–∏–µ–Ω—Ç...")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ø–∏—Å–∫–æ–≤
    print("\n" + "="*60)
    print("ü§ñ TG-Guard - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫")
    print("="*60)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ø–∏—Å–∫–æ–≤
    tracked_list, blacklist_list, exclusion_list = show_list_management_menu()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞
    selected_mode = show_mode_selection()
    
    config = get_config()
    async with TelegramClient(config['SESSION'], config['API_ID'], config['API_HASH']) as client:
        me = await client.get_me()
        me_id = me.id
        print(f"‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –∫–∞–∫: {get_display_name(me)}")

        # 1) –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –Ω–∞–±–æ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö (TRACKED + EXPORT_GROUP)
        tracked_users_set = set(tracked_list)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        exported_users = await get_users_from_group(client, config['EXPORT_GROUP'])
        tracked_users_set.update(exported_users)

        # 2) –†–µ–∑–æ–ª–≤–∏–º —é–∑–µ—Ä–Ω–µ–π–º—ã –≤ ID
        tracked_map = await resolve_users(client, tracked_users_set)
        blacklist_map = await resolve_users(client, blacklist_list)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        exclusion_map = await resolve_users(client, exclusion_list)  # –†–µ–∑–æ–ª–≤–∏–º —Å–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π

        print("\n--- –ò—Ç–æ–≥–æ–≤—ã–µ —Å–ø–∏—Å–∫–∏ ---")
        print(f"üëÄ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º ({len(tracked_map)}): {list(tracked_map.values())}")
        print(f"üö´ –ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ ({len(blacklist_map)}): {list(blacklist_map.values())}")
        print(f"üîí –ò—Å–∫–ª—é—á–µ–Ω–∏—è ({len(exclusion_map)}): {list(exclusion_map.values())}\n")

        # 3) –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è –≤ '–ò–∑–±—Ä–∞–Ω–Ω–æ–º' (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
        setup_saved_messages_auto_delete(client, me_id)

        # 4) –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
        if selected_mode == 1:
            await mode_tracked_scanning(client, tracked_map)
        elif selected_mode == 2:
            await mode_blacklist_purge_all(client, blacklist_map)
        elif selected_mode == 3:
            await mode_blacklist_new_only(client, blacklist_map)
        elif selected_mode == 4:
            await mode_combined(client, tracked_map, blacklist_map)
        elif selected_mode == 5:
            await mode_self_purge(client, me_id, exclusion_map)
            return  # –í—ã—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ —Å–∞–º–æ–æ—á–∏—Å—Ç–∫–∏, –Ω–µ —Å–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è

        print("\n‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è...")
        print("üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        await client.run_until_disconnected()
